// // Move to routes file after we get importing
// Vue.use(VueRouter)


// const Login = Vue.extend({
//     template: '<div>LOGIN</div>',
//     mounted() {
//         console.log('Login Component: Mounted')
//         console.log('This', this)
//         var provider = new firebase.auth.GoogleAuthProvider()
//         console.log('?', provider)
//         window.firebase.auth().signInWithPopup(provider).then(function(result) {
//             // This gives you a Google Access Token. You can use it to access the Google API.
//             var token = result.credential.accessToken;
//             // The signed-in user info.
//             var user = result.user;

//             console.log('tok', token, 'user', user);
//             // ...
//           }).catch(function(error) {
//             // Handle Errors here.
//             var errorCode = error.code;
//             var errorMessage = error.message;
//             // The email of the user's account used.
//             var email = error.email;
//             // The firebase.auth.AuthCredential type that was used.
//             var credential = error.credential;
//             // ...
//           });
//     },
//     updated() {
//         console.log('Login Component: Updated')
//     }
// })

// const Dashboard = Vue.extend({
//     template: '<div>DASH</div>',
//     mounted() {
//         console.log('Dashboard Component: Mounted')
//     },
//     updated() {
//         console.log('Dashboard Component: Updated')
//     }
// })

// const routes = [
//     { path: '/login', component: Login },
//     { path: '/dashboard', component: Dashboard }
// ]

// const router = new VueRouter({
//     routes
// })

// const app = new Vue({
//     router,
// }).$mount('#app');


console.log('now');

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gLy8gTW92ZSB0byByb3V0ZXMgZmlsZSBhZnRlciB3ZSBnZXQgaW1wb3J0aW5nXG4vLyBWdWUudXNlKFZ1ZVJvdXRlcilcblxuXG4vLyBjb25zdCBMb2dpbiA9IFZ1ZS5leHRlbmQoe1xuLy8gICAgIHRlbXBsYXRlOiAnPGRpdj5MT0dJTjwvZGl2PicsXG4vLyAgICAgbW91bnRlZCgpIHtcbi8vICAgICAgICAgY29uc29sZS5sb2coJ0xvZ2luIENvbXBvbmVudDogTW91bnRlZCcpXG4vLyAgICAgICAgIGNvbnNvbGUubG9nKCdUaGlzJywgdGhpcylcbi8vICAgICAgICAgdmFyIHByb3ZpZGVyID0gbmV3IGZpcmViYXNlLmF1dGguR29vZ2xlQXV0aFByb3ZpZGVyKClcbi8vICAgICAgICAgY29uc29sZS5sb2coJz8nLCBwcm92aWRlcilcbi8vICAgICAgICAgd2luZG93LmZpcmViYXNlLmF1dGgoKS5zaWduSW5XaXRoUG9wdXAocHJvdmlkZXIpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4vLyAgICAgICAgICAgICAvLyBUaGlzIGdpdmVzIHlvdSBhIEdvb2dsZSBBY2Nlc3MgVG9rZW4uIFlvdSBjYW4gdXNlIGl0IHRvIGFjY2VzcyB0aGUgR29vZ2xlIEFQSS5cbi8vICAgICAgICAgICAgIHZhciB0b2tlbiA9IHJlc3VsdC5jcmVkZW50aWFsLmFjY2Vzc1Rva2VuO1xuLy8gICAgICAgICAgICAgLy8gVGhlIHNpZ25lZC1pbiB1c2VyIGluZm8uXG4vLyAgICAgICAgICAgICB2YXIgdXNlciA9IHJlc3VsdC51c2VyO1xuXG4vLyAgICAgICAgICAgICBjb25zb2xlLmxvZygndG9rJywgdG9rZW4sICd1c2VyJywgdXNlcik7XG4vLyAgICAgICAgICAgICAvLyAuLi5cbi8vICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuLy8gICAgICAgICAgICAgLy8gSGFuZGxlIEVycm9ycyBoZXJlLlxuLy8gICAgICAgICAgICAgdmFyIGVycm9yQ29kZSA9IGVycm9yLmNvZGU7XG4vLyAgICAgICAgICAgICB2YXIgZXJyb3JNZXNzYWdlID0gZXJyb3IubWVzc2FnZTtcbi8vICAgICAgICAgICAgIC8vIFRoZSBlbWFpbCBvZiB0aGUgdXNlcidzIGFjY291bnQgdXNlZC5cbi8vICAgICAgICAgICAgIHZhciBlbWFpbCA9IGVycm9yLmVtYWlsO1xuLy8gICAgICAgICAgICAgLy8gVGhlIGZpcmViYXNlLmF1dGguQXV0aENyZWRlbnRpYWwgdHlwZSB0aGF0IHdhcyB1c2VkLlxuLy8gICAgICAgICAgICAgdmFyIGNyZWRlbnRpYWwgPSBlcnJvci5jcmVkZW50aWFsO1xuLy8gICAgICAgICAgICAgLy8gLi4uXG4vLyAgICAgICAgICAgfSk7XG4vLyAgICAgfSxcbi8vICAgICB1cGRhdGVkKCkge1xuLy8gICAgICAgICBjb25zb2xlLmxvZygnTG9naW4gQ29tcG9uZW50OiBVcGRhdGVkJylcbi8vICAgICB9XG4vLyB9KVxuXG4vLyBjb25zdCBEYXNoYm9hcmQgPSBWdWUuZXh0ZW5kKHtcbi8vICAgICB0ZW1wbGF0ZTogJzxkaXY+REFTSDwvZGl2PicsXG4vLyAgICAgbW91bnRlZCgpIHtcbi8vICAgICAgICAgY29uc29sZS5sb2coJ0Rhc2hib2FyZCBDb21wb25lbnQ6IE1vdW50ZWQnKVxuLy8gICAgIH0sXG4vLyAgICAgdXBkYXRlZCgpIHtcbi8vICAgICAgICAgY29uc29sZS5sb2coJ0Rhc2hib2FyZCBDb21wb25lbnQ6IFVwZGF0ZWQnKVxuLy8gICAgIH1cbi8vIH0pXG5cbi8vIGNvbnN0IHJvdXRlcyA9IFtcbi8vICAgICB7IHBhdGg6ICcvbG9naW4nLCBjb21wb25lbnQ6IExvZ2luIH0sXG4vLyAgICAgeyBwYXRoOiAnL2Rhc2hib2FyZCcsIGNvbXBvbmVudDogRGFzaGJvYXJkIH1cbi8vIF1cblxuLy8gY29uc3Qgcm91dGVyID0gbmV3IFZ1ZVJvdXRlcih7XG4vLyAgICAgcm91dGVzXG4vLyB9KVxuXG4vLyBjb25zdCBhcHAgPSBuZXcgVnVlKHtcbi8vICAgICByb3V0ZXIsXG4vLyB9KS4kbW91bnQoJyNhcHAnKTtcblxuXG5jb25zb2xlLmxvZygnbm93Jyk7XG4iXX0=
